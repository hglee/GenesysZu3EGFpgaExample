// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bd_2d50_csc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_769_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_csc_dout,
        stream_csc_num_data_valid,
        stream_csc_fifo_cap,
        stream_csc_empty_n,
        stream_csc_read,
        stream_out_hresampled_din,
        stream_out_hresampled_num_data_valid,
        stream_out_hresampled_fifo_cap,
        stream_out_hresampled_full_n,
        stream_out_hresampled_write,
        pixbuf_y_18,
        pixbuf_y_17,
        pixbuf_y_16,
        pixbuf_y_15,
        mpix_cr_4,
        mpix_cb_4,
        p_0_0_0_0_0_1_3740_lcssa800_i,
        p_0_0_0_0_0492_1_3736_lcssa797_i,
        p_0_3_0_0_0708_lcssa771_i,
        p_0_0_0_0_0500706_lcssa768_i,
        loopWidth,
        p_read,
        zext_ln765,
        zext_ln765_1,
        pixbuf_y_24_out,
        pixbuf_y_24_out_ap_vld,
        pixbuf_y_23_out,
        pixbuf_y_23_out_ap_vld,
        pixbuf_y_22_out,
        pixbuf_y_22_out_ap_vld,
        pixbuf_y_21_out,
        pixbuf_y_21_out_ap_vld,
        pixbuf_y_20_out_i,
        pixbuf_y_20_out_o,
        pixbuf_y_20_out_o_ap_vld,
        pixbuf_y_19_out_i,
        pixbuf_y_19_out_o,
        pixbuf_y_19_out_o_ap_vld,
        mpix_cr_6_out,
        mpix_cr_6_out_ap_vld,
        mpix_cr_5_out_i,
        mpix_cr_5_out_o,
        mpix_cr_5_out_o_ap_vld,
        mpix_cb_6_out,
        mpix_cb_6_out_ap_vld,
        mpix_cb_5_out_i,
        mpix_cb_5_out_o,
        mpix_cb_5_out_o_ap_vld,
        p_0_0_0_0_0_3730_i_out_i,
        p_0_0_0_0_0_3730_i_out_o,
        p_0_0_0_0_0_3730_i_out_o_ap_vld,
        p_0_0_0_0_0492_3726_i_out_i,
        p_0_0_0_0_0492_3726_i_out_o,
        p_0_0_0_0_0492_3726_i_out_o_ap_vld,
        p_0_0_0_0_0_2722_i_out_i,
        p_0_0_0_0_0_2722_i_out_o,
        p_0_0_0_0_0_2722_i_out_o_ap_vld,
        p_0_0_0_0_0492_2718_i_out_i,
        p_0_0_0_0_0492_2718_i_out_o,
        p_0_0_0_0_0492_2718_i_out_o_ap_vld,
        inpix_0_5_0_0_0_load703_i_out_i,
        inpix_0_5_0_0_0_load703_i_out_o,
        inpix_0_5_0_0_0_load703_i_out_o_ap_vld,
        inpix_0_4_0_0_0_load701_i_out_i,
        inpix_0_4_0_0_0_load701_i_out_o,
        inpix_0_4_0_0_0_load701_i_out_o_ap_vld,
        inpix_0_3_0_0_0_load699_i_out_i,
        inpix_0_3_0_0_0_load699_i_out_o,
        inpix_0_3_0_0_0_load699_i_out_o_ap_vld,
        inpix_0_2_0_0_0_load697_i_out_i,
        inpix_0_2_0_0_0_load697_i_out_o,
        inpix_0_2_0_0_0_load697_i_out_o_ap_vld,
        inpix_0_1_0_0_0_load695_i_out_i,
        inpix_0_1_0_0_0_load695_i_out_o,
        inpix_0_1_0_0_0_load695_i_out_o_ap_vld,
        inpix_0_0_0_0_0_load693_i_out_i,
        inpix_0_0_0_0_0_load693_i_out_o,
        inpix_0_0_0_0_0_load693_i_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] stream_csc_dout;
input  [4:0] stream_csc_num_data_valid;
input  [4:0] stream_csc_fifo_cap;
input   stream_csc_empty_n;
output   stream_csc_read;
output  [47:0] stream_out_hresampled_din;
input  [4:0] stream_out_hresampled_num_data_valid;
input  [4:0] stream_out_hresampled_fifo_cap;
input   stream_out_hresampled_full_n;
output   stream_out_hresampled_write;
input  [7:0] pixbuf_y_18;
input  [7:0] pixbuf_y_17;
input  [7:0] pixbuf_y_16;
input  [7:0] pixbuf_y_15;
input  [7:0] mpix_cr_4;
input  [7:0] mpix_cb_4;
input  [7:0] p_0_0_0_0_0_1_3740_lcssa800_i;
input  [7:0] p_0_0_0_0_0492_1_3736_lcssa797_i;
input  [7:0] p_0_3_0_0_0708_lcssa771_i;
input  [7:0] p_0_0_0_0_0500706_lcssa768_i;
input  [11:0] loopWidth;
input  [0:0] p_read;
input  [0:0] zext_ln765;
input  [10:0] zext_ln765_1;
output  [7:0] pixbuf_y_24_out;
output   pixbuf_y_24_out_ap_vld;
output  [7:0] pixbuf_y_23_out;
output   pixbuf_y_23_out_ap_vld;
output  [7:0] pixbuf_y_22_out;
output   pixbuf_y_22_out_ap_vld;
output  [7:0] pixbuf_y_21_out;
output   pixbuf_y_21_out_ap_vld;
input  [7:0] pixbuf_y_20_out_i;
output  [7:0] pixbuf_y_20_out_o;
output   pixbuf_y_20_out_o_ap_vld;
input  [7:0] pixbuf_y_19_out_i;
output  [7:0] pixbuf_y_19_out_o;
output   pixbuf_y_19_out_o_ap_vld;
output  [7:0] mpix_cr_6_out;
output   mpix_cr_6_out_ap_vld;
input  [7:0] mpix_cr_5_out_i;
output  [7:0] mpix_cr_5_out_o;
output   mpix_cr_5_out_o_ap_vld;
output  [7:0] mpix_cb_6_out;
output   mpix_cb_6_out_ap_vld;
input  [7:0] mpix_cb_5_out_i;
output  [7:0] mpix_cb_5_out_o;
output   mpix_cb_5_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0_3730_i_out_i;
output  [7:0] p_0_0_0_0_0_3730_i_out_o;
output   p_0_0_0_0_0_3730_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0492_3726_i_out_i;
output  [7:0] p_0_0_0_0_0492_3726_i_out_o;
output   p_0_0_0_0_0492_3726_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0_2722_i_out_i;
output  [7:0] p_0_0_0_0_0_2722_i_out_o;
output   p_0_0_0_0_0_2722_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0492_2718_i_out_i;
output  [7:0] p_0_0_0_0_0492_2718_i_out_o;
output   p_0_0_0_0_0492_2718_i_out_o_ap_vld;
input  [7:0] inpix_0_5_0_0_0_load703_i_out_i;
output  [7:0] inpix_0_5_0_0_0_load703_i_out_o;
output   inpix_0_5_0_0_0_load703_i_out_o_ap_vld;
input  [7:0] inpix_0_4_0_0_0_load701_i_out_i;
output  [7:0] inpix_0_4_0_0_0_load701_i_out_o;
output   inpix_0_4_0_0_0_load701_i_out_o_ap_vld;
input  [7:0] inpix_0_3_0_0_0_load699_i_out_i;
output  [7:0] inpix_0_3_0_0_0_load699_i_out_o;
output   inpix_0_3_0_0_0_load699_i_out_o_ap_vld;
input  [7:0] inpix_0_2_0_0_0_load697_i_out_i;
output  [7:0] inpix_0_2_0_0_0_load697_i_out_o;
output   inpix_0_2_0_0_0_load697_i_out_o_ap_vld;
input  [7:0] inpix_0_1_0_0_0_load695_i_out_i;
output  [7:0] inpix_0_1_0_0_0_load695_i_out_o;
output   inpix_0_1_0_0_0_load695_i_out_o_ap_vld;
input  [7:0] inpix_0_0_0_0_0_load693_i_out_i;
output  [7:0] inpix_0_0_0_0_0_load693_i_out_o;
output   inpix_0_0_0_0_0_load693_i_out_o_ap_vld;

reg ap_idle;
reg stream_csc_read;
reg[47:0] stream_out_hresampled_din;
reg stream_out_hresampled_write;
reg pixbuf_y_24_out_ap_vld;
reg pixbuf_y_23_out_ap_vld;
reg pixbuf_y_22_out_ap_vld;
reg pixbuf_y_21_out_ap_vld;
reg[7:0] pixbuf_y_20_out_o;
reg pixbuf_y_20_out_o_ap_vld;
reg[7:0] pixbuf_y_19_out_o;
reg pixbuf_y_19_out_o_ap_vld;
reg mpix_cr_6_out_ap_vld;
reg[7:0] mpix_cr_5_out_o;
reg mpix_cr_5_out_o_ap_vld;
reg mpix_cb_6_out_ap_vld;
reg[7:0] mpix_cb_5_out_o;
reg mpix_cb_5_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0_3730_i_out_o;
reg p_0_0_0_0_0_3730_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0492_3726_i_out_o;
reg p_0_0_0_0_0492_3726_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0_2722_i_out_o;
reg p_0_0_0_0_0_2722_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0492_2718_i_out_o;
reg p_0_0_0_0_0492_2718_i_out_o_ap_vld;
reg[7:0] inpix_0_5_0_0_0_load703_i_out_o;
reg inpix_0_5_0_0_0_load703_i_out_o_ap_vld;
reg[7:0] inpix_0_4_0_0_0_load701_i_out_o;
reg inpix_0_4_0_0_0_load701_i_out_o_ap_vld;
reg[7:0] inpix_0_3_0_0_0_load699_i_out_o;
reg inpix_0_3_0_0_0_load699_i_out_o_ap_vld;
reg[7:0] inpix_0_2_0_0_0_load697_i_out_o;
reg inpix_0_2_0_0_0_load697_i_out_o_ap_vld;
reg[7:0] inpix_0_1_0_0_0_load695_i_out_o;
reg inpix_0_1_0_0_0_load695_i_out_o_ap_vld;
reg[7:0] inpix_0_0_0_0_0_load693_i_out_o;
reg inpix_0_0_0_0_0_load693_i_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln769_reg_1043;
reg   [0:0] icmp_ln777_reg_1047;
reg    ap_predicate_op62_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln769_reg_1043_pp0_iter1_reg;
reg   [0:0] tmp_4_reg_1065;
reg   [0:0] tmp_4_reg_1065_pp0_iter1_reg;
reg    ap_predicate_op131_write_state3;
reg    ap_predicate_op140_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln769_fu_393_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_out_hresampled_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_csc_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln777_fu_411_p2;
reg   [0:0] icmp_ln777_reg_1047_pp0_iter1_reg;
wire   [0:0] cmp151_i_fu_417_p2;
reg   [0:0] cmp151_i_reg_1053;
reg   [0:0] cmp151_i_reg_1053_pp0_iter1_reg;
wire   [7:0] select_ln859_fu_630_p3;
wire   [7:0] select_ln859_1_fu_637_p3;
wire   [7:0] select_ln859_2_fu_644_p3;
wire   [7:0] select_ln859_3_fu_651_p3;
wire   [7:0] trunc_ln779_fu_436_p1;
reg   [7:0] p_0_0_0_0_0492_1_3735_i_fu_158;
wire    ap_loop_init;
reg   [7:0] p_0_0_0_0_0_1_3739_i_fu_162;
reg   [11:0] x_fu_166;
wire   [11:0] add_ln769_fu_399_p2;
reg   [11:0] ap_sig_allocacmp_x_4;
reg   [7:0] p_0_0_0_0_0500705_i_fu_170;
reg   [7:0] p_0_3_0_0_0707_i_fu_174;
reg   [7:0] mpix_cb_fu_178;
reg   [7:0] mpix_cr_fu_182;
reg   [7:0] pixbuf_y_fu_186;
reg   [7:0] pixbuf_y_1_fu_190;
reg   [7:0] pixbuf_y_2_fu_194;
reg   [7:0] pixbuf_y_3_fu_198;
wire   [47:0] zext_ln927_fu_820_p1;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] p_0_fu_849_p7;
wire   [11:0] zext_ln765_cast_fu_331_p1;
wire   [11:0] zext_ln765_1_cast_fu_327_p1;
wire   [11:0] out_x_fu_405_p2;
wire   [7:0] select_ln845_fu_616_p3;
wire   [7:0] select_ln845_1_fu_623_p3;
wire   [7:0] select_ln859_6_fu_686_p3;
wire   [7:0] select_ln859_5_fu_665_p3;
wire   [8:0] shl_ln_fu_693_p3;
wire   [8:0] zext_ln891_fu_709_p1;
wire   [8:0] add_ln891_fu_713_p2;
wire   [9:0] zext_ln891_1_fu_719_p1;
wire   [9:0] zext_ln890_fu_701_p1;
wire   [9:0] add_ln891_2_fu_723_p2;
wire   [9:0] zext_ln890_1_fu_705_p1;
wire   [7:0] select_ln859_7_fu_735_p3;
wire   [7:0] select_ln859_4_fu_658_p3;
wire   [8:0] shl_ln1_fu_742_p3;
wire   [8:0] zext_ln894_fu_758_p1;
wire   [8:0] add_ln894_fu_762_p2;
wire   [9:0] zext_ln894_1_fu_768_p1;
wire   [9:0] zext_ln893_fu_750_p1;
wire   [9:0] add_ln894_2_fu_772_p2;
wire   [9:0] zext_ln893_1_fu_754_p1;
wire   [9:0] add_ln894_1_fu_778_p2;
wire   [9:0] add_ln891_1_fu_729_p2;
wire   [7:0] trunc_ln_fu_784_p4;
wire   [7:0] select_ln903_1_fu_679_p3;
wire   [7:0] tmp_fu_794_p4;
wire   [7:0] select_ln903_fu_672_p3;
wire   [40:0] tmp_s_fu_804_p7;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_625;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 p_0_0_0_0_0492_1_3735_i_fu_158 = 8'd0;
#0 p_0_0_0_0_0_1_3739_i_fu_162 = 8'd0;
#0 x_fu_166 = 12'd0;
#0 p_0_0_0_0_0500705_i_fu_170 = 8'd0;
#0 p_0_3_0_0_0707_i_fu_174 = 8'd0;
#0 mpix_cb_fu_178 = 8'd0;
#0 mpix_cr_fu_182 = 8'd0;
#0 pixbuf_y_fu_186 = 8'd0;
#0 pixbuf_y_1_fu_190 = 8'd0;
#0 pixbuf_y_2_fu_194 = 8'd0;
#0 pixbuf_y_3_fu_198 = 8'd0;
#0 ap_done_reg = 1'b0;
end

bd_2d50_csc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mpix_cb_fu_178 <= mpix_cb_4;
        end else if ((1'b1 == ap_condition_625)) begin
            mpix_cb_fu_178 <= {{stream_csc_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mpix_cr_fu_182 <= mpix_cr_4;
        end else if ((1'b1 == ap_condition_625)) begin
            mpix_cr_fu_182 <= {{stream_csc_dout[47:40]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0_0_0492_1_3735_i_fu_158 <= p_0_0_0_0_0492_1_3736_lcssa797_i;
        end else if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_0_0_0_0_0492_1_3735_i_fu_158 <= mpix_cb_fu_178;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0_0_0500705_i_fu_170 <= p_0_0_0_0_0500706_lcssa768_i;
        end else if ((1'b1 == ap_condition_625)) begin
            p_0_0_0_0_0500705_i_fu_170 <= trunc_ln779_fu_436_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0_0_0_1_3739_i_fu_162 <= p_0_0_0_0_0_1_3740_lcssa800_i;
        end else if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_0_0_0_0_0_1_3739_i_fu_162 <= mpix_cr_fu_182;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_3_0_0_0707_i_fu_174 <= p_0_3_0_0_0708_lcssa771_i;
        end else if ((1'b1 == ap_condition_625)) begin
            p_0_3_0_0_0707_i_fu_174 <= {{stream_csc_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_1_fu_190 <= pixbuf_y_16;
        end else if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_1_fu_190 <= pixbuf_y_3_fu_198;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_2_fu_194 <= pixbuf_y_17;
        end else if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_2_fu_194 <= p_0_0_0_0_0500705_i_fu_170;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_3_fu_198 <= pixbuf_y_18;
        end else if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_3_fu_198 <= p_0_3_0_0_0707_i_fu_174;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_fu_186 <= pixbuf_y_15;
        end else if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_fu_186 <= pixbuf_y_2_fu_194;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln769_fu_393_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_166 <= add_ln769_fu_399_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_166 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        cmp151_i_reg_1053 <= cmp151_i_fu_417_p2;
        cmp151_i_reg_1053_pp0_iter1_reg <= cmp151_i_reg_1053;
        icmp_ln769_reg_1043 <= icmp_ln769_fu_393_p2;
        icmp_ln769_reg_1043_pp0_iter1_reg <= icmp_ln769_reg_1043;
        icmp_ln777_reg_1047 <= icmp_ln777_fu_411_p2;
        icmp_ln777_reg_1047_pp0_iter1_reg <= icmp_ln777_reg_1047;
        tmp_4_reg_1065 <= out_x_fu_405_p2[32'd11];
        tmp_4_reg_1065_pp0_iter1_reg <= tmp_4_reg_1065;
    end
end

always @ (*) begin
    if (((icmp_ln769_fu_393_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_4 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_4 = x_fu_166;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_0_0_0_0_load693_i_out_o = trunc_ln779_fu_436_p1;
    end else begin
        inpix_0_0_0_0_0_load693_i_out_o = inpix_0_0_0_0_0_load693_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_0_0_0_0_load693_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_0_0_0_0_load693_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_1_0_0_0_load695_i_out_o = {{stream_csc_dout[15:8]}};
    end else begin
        inpix_0_1_0_0_0_load695_i_out_o = inpix_0_1_0_0_0_load695_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_1_0_0_0_load695_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_1_0_0_0_load695_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_2_0_0_0_load697_i_out_o = {{stream_csc_dout[23:16]}};
    end else begin
        inpix_0_2_0_0_0_load697_i_out_o = inpix_0_2_0_0_0_load697_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_2_0_0_0_load697_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_2_0_0_0_load697_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_3_0_0_0_load699_i_out_o = {{stream_csc_dout[31:24]}};
    end else begin
        inpix_0_3_0_0_0_load699_i_out_o = inpix_0_3_0_0_0_load699_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_3_0_0_0_load699_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_3_0_0_0_load699_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_4_0_0_0_load701_i_out_o = {{stream_csc_dout[39:32]}};
    end else begin
        inpix_0_4_0_0_0_load701_i_out_o = inpix_0_4_0_0_0_load701_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_4_0_0_0_load701_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_4_0_0_0_load701_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_5_0_0_0_load703_i_out_o = {{stream_csc_dout[47:40]}};
    end else begin
        inpix_0_5_0_0_0_load703_i_out_o = inpix_0_5_0_0_0_load703_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_5_0_0_0_load703_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_5_0_0_0_load703_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mpix_cb_5_out_o = {{stream_csc_dout[15:8]}};
    end else begin
        mpix_cb_5_out_o = mpix_cb_5_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mpix_cb_5_out_o_ap_vld = 1'b1;
    end else begin
        mpix_cb_5_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mpix_cb_6_out_ap_vld = 1'b1;
    end else begin
        mpix_cb_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mpix_cr_5_out_o = {{stream_csc_dout[23:16]}};
    end else begin
        mpix_cr_5_out_o = mpix_cr_5_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mpix_cr_5_out_o_ap_vld = 1'b1;
    end else begin
        mpix_cr_5_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mpix_cr_6_out_ap_vld = 1'b1;
    end else begin
        mpix_cr_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0492_2718_i_out_o = select_ln859_3_fu_651_p3;
    end else begin
        p_0_0_0_0_0492_2718_i_out_o = p_0_0_0_0_0492_2718_i_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0492_2718_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0492_2718_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0492_3726_i_out_o = select_ln859_1_fu_637_p3;
    end else begin
        p_0_0_0_0_0492_3726_i_out_o = p_0_0_0_0_0492_3726_i_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0492_3726_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0492_3726_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0_2722_i_out_o = select_ln859_2_fu_644_p3;
    end else begin
        p_0_0_0_0_0_2722_i_out_o = p_0_0_0_0_0_2722_i_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0_2722_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0_2722_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0_3730_i_out_o = select_ln859_fu_630_p3;
    end else begin
        p_0_0_0_0_0_3730_i_out_o = p_0_0_0_0_0_3730_i_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0_3730_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0_3730_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_19_out_o = pixbuf_y_fu_186;
    end else begin
        pixbuf_y_19_out_o = pixbuf_y_19_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_19_out_o_ap_vld = 1'b1;
    end else begin
        pixbuf_y_19_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_20_out_o = pixbuf_y_1_fu_190;
    end else begin
        pixbuf_y_20_out_o = pixbuf_y_20_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_20_out_o_ap_vld = 1'b1;
    end else begin
        pixbuf_y_20_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_21_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_22_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_23_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_1043_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_24_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op62_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_csc_blk_n = stream_csc_empty_n;
    end else begin
        stream_csc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op62_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_csc_read = 1'b1;
    end else begin
        stream_csc_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op140_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op131_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_out_hresampled_blk_n = stream_out_hresampled_full_n;
    end else begin
        stream_out_hresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op140_write_state3 == 1'b1)) begin
            stream_out_hresampled_din = p_0_fu_849_p7;
        end else if ((ap_predicate_op131_write_state3 == 1'b1)) begin
            stream_out_hresampled_din = zext_ln927_fu_820_p1;
        end else begin
            stream_out_hresampled_din = 'bx;
        end
    end else begin
        stream_out_hresampled_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op140_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op131_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_out_hresampled_write = 1'b1;
    end else begin
        stream_out_hresampled_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln769_fu_399_p2 = (ap_sig_allocacmp_x_4 + 12'd1);

assign add_ln891_1_fu_729_p2 = (add_ln891_2_fu_723_p2 + zext_ln890_1_fu_705_p1);

assign add_ln891_2_fu_723_p2 = (zext_ln891_1_fu_719_p1 + zext_ln890_fu_701_p1);

assign add_ln891_fu_713_p2 = (zext_ln891_fu_709_p1 + 9'd2);

assign add_ln894_1_fu_778_p2 = (add_ln894_2_fu_772_p2 + zext_ln893_1_fu_754_p1);

assign add_ln894_2_fu_772_p2 = (zext_ln894_1_fu_768_p1 + zext_ln893_fu_750_p1);

assign add_ln894_fu_762_p2 = (zext_ln894_fu_758_p1 + 9'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op62_read_state2 == 1'b1) & (stream_csc_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op140_write_state3 == 1'b1) & (stream_out_hresampled_full_n == 1'b0)) | ((ap_predicate_op131_write_state3 == 1'b1) & (stream_out_hresampled_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_625 = ((icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op131_write_state3 = ((p_read == 1'd0) & (tmp_4_reg_1065_pp0_iter1_reg == 1'd0) & (icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op140_write_state3 = ((p_read == 1'd1) & (tmp_4_reg_1065_pp0_iter1_reg == 1'd0) & (icmp_ln769_reg_1043_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op62_read_state2 = ((icmp_ln777_reg_1047 == 1'd1) & (icmp_ln769_reg_1043 == 1'd1));
end

assign cmp151_i_fu_417_p2 = ((ap_sig_allocacmp_x_4 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln769_fu_393_p2 = ((ap_sig_allocacmp_x_4 < loopWidth) ? 1'b1 : 1'b0);

assign icmp_ln777_fu_411_p2 = ((zext_ln765_1_cast_fu_327_p1 > ap_sig_allocacmp_x_4) ? 1'b1 : 1'b0);

assign mpix_cb_6_out = mpix_cb_fu_178;

assign mpix_cr_6_out = mpix_cr_fu_182;

assign out_x_fu_405_p2 = (ap_sig_allocacmp_x_4 - zext_ln765_cast_fu_331_p1);

assign p_0_fu_849_p7 = {{{{{{inpix_0_5_0_0_0_load703_i_out_i}, {inpix_0_4_0_0_0_load701_i_out_i}}, {inpix_0_3_0_0_0_load699_i_out_i}}, {inpix_0_2_0_0_0_load697_i_out_i}}, {inpix_0_1_0_0_0_load695_i_out_i}}, {inpix_0_0_0_0_0_load693_i_out_i}};

assign pixbuf_y_21_out = pixbuf_y_fu_186;

assign pixbuf_y_22_out = pixbuf_y_1_fu_190;

assign pixbuf_y_23_out = pixbuf_y_2_fu_194;

assign pixbuf_y_24_out = pixbuf_y_3_fu_198;

assign select_ln845_1_fu_623_p3 = ((icmp_ln777_reg_1047_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cb_5_out_i : mpix_cb_fu_178);

assign select_ln845_fu_616_p3 = ((icmp_ln777_reg_1047_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cr_5_out_i : mpix_cr_fu_182);

assign select_ln859_1_fu_637_p3 = ((cmp151_i_reg_1053_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cb_5_out_i : select_ln845_1_fu_623_p3);

assign select_ln859_2_fu_644_p3 = ((cmp151_i_reg_1053_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cr_5_out_i : p_0_0_0_0_0_1_3739_i_fu_162);

assign select_ln859_3_fu_651_p3 = ((cmp151_i_reg_1053_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cb_5_out_i : p_0_0_0_0_0492_1_3735_i_fu_158);

assign select_ln859_4_fu_658_p3 = ((cmp151_i_reg_1053_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cr_5_out_i : p_0_0_0_0_0_2722_i_out_i);

assign select_ln859_5_fu_665_p3 = ((cmp151_i_reg_1053_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cb_5_out_i : p_0_0_0_0_0492_2718_i_out_i);

assign select_ln859_6_fu_686_p3 = ((cmp151_i_reg_1053_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cb_5_out_i : p_0_0_0_0_0492_3726_i_out_i);

assign select_ln859_7_fu_735_p3 = ((cmp151_i_reg_1053_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cr_5_out_i : p_0_0_0_0_0_3730_i_out_i);

assign select_ln859_fu_630_p3 = ((cmp151_i_reg_1053_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cr_5_out_i : select_ln845_fu_616_p3);

assign select_ln903_1_fu_679_p3 = ((p_read[0:0] == 1'b1) ? pixbuf_y_20_out_i : pixbuf_y_3_fu_198);

assign select_ln903_fu_672_p3 = ((p_read[0:0] == 1'b1) ? pixbuf_y_19_out_i : pixbuf_y_2_fu_194);

assign shl_ln1_fu_742_p3 = {{select_ln859_7_fu_735_p3}, {1'd0}};

assign shl_ln_fu_693_p3 = {{select_ln859_6_fu_686_p3}, {1'd0}};

assign tmp_fu_794_p4 = {{add_ln891_1_fu_729_p2[9:2]}};

assign tmp_s_fu_804_p7 = {{{{{{{{{{1'd0}, {trunc_ln_fu_784_p4}}}, {select_ln903_1_fu_679_p3}}}, {8'd0}}}, {tmp_fu_794_p4}}}, {select_ln903_fu_672_p3}};

assign trunc_ln779_fu_436_p1 = stream_csc_dout[7:0];

assign trunc_ln_fu_784_p4 = {{add_ln894_1_fu_778_p2[9:2]}};

assign zext_ln765_1_cast_fu_327_p1 = zext_ln765_1;

assign zext_ln765_cast_fu_331_p1 = zext_ln765;

assign zext_ln890_1_fu_705_p1 = shl_ln_fu_693_p3;

assign zext_ln890_fu_701_p1 = select_ln859_5_fu_665_p3;

assign zext_ln891_1_fu_719_p1 = add_ln891_fu_713_p2;

assign zext_ln891_fu_709_p1 = select_ln859_3_fu_651_p3;

assign zext_ln893_1_fu_754_p1 = shl_ln1_fu_742_p3;

assign zext_ln893_fu_750_p1 = select_ln859_4_fu_658_p3;

assign zext_ln894_1_fu_768_p1 = add_ln894_fu_762_p2;

assign zext_ln894_fu_758_p1 = select_ln859_2_fu_644_p3;

assign zext_ln927_fu_820_p1 = tmp_s_fu_804_p7;

endmodule //bd_2d50_csc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_769_2
