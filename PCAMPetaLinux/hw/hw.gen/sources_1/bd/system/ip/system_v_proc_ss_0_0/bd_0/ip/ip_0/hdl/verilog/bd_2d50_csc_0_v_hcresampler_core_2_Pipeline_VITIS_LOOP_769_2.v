// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bd_2d50_csc_0_v_hcresampler_core_2_Pipeline_VITIS_LOOP_769_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_vresampled_dout,
        stream_in_vresampled_num_data_valid,
        stream_in_vresampled_fifo_cap,
        stream_in_vresampled_empty_n,
        stream_in_vresampled_read,
        stream_in_hresampled_din,
        stream_in_hresampled_num_data_valid,
        stream_in_hresampled_fifo_cap,
        stream_in_hresampled_full_n,
        stream_in_hresampled_write,
        pixbuf_y_5,
        pixbuf_y_4,
        pixbuf_y_3,
        pixbuf_y_2,
        mpix_cr,
        mpix_cb,
        p_0_0_0_0_0_1_3740_lcssa800_i,
        p_0_0_0_0_0492_1_3736_lcssa797_i,
        p_0_3_0_0_0708_lcssa771_i,
        p_0_0_0_0_0500706_lcssa768_i,
        loopWidth,
        p_read,
        select_ln765,
        zext_ln765,
        pixbuf_y_11_out,
        pixbuf_y_11_out_ap_vld,
        pixbuf_y_10_out,
        pixbuf_y_10_out_ap_vld,
        pixbuf_y_9_out,
        pixbuf_y_9_out_ap_vld,
        pixbuf_y_8_out,
        pixbuf_y_8_out_ap_vld,
        pixbuf_y_7_out_i,
        pixbuf_y_7_out_o,
        pixbuf_y_7_out_o_ap_vld,
        pixbuf_y_6_out_i,
        pixbuf_y_6_out_o,
        pixbuf_y_6_out_o_ap_vld,
        mpix_cr_1_out,
        mpix_cr_1_out_ap_vld,
        mpix_cb_1_out,
        mpix_cb_1_out_ap_vld,
        p_0_0_0_0_0_3730_i_out_i,
        p_0_0_0_0_0_3730_i_out_o,
        p_0_0_0_0_0_3730_i_out_o_ap_vld,
        p_0_0_0_0_0492_3726_i_out_i,
        p_0_0_0_0_0492_3726_i_out_o,
        p_0_0_0_0_0492_3726_i_out_o_ap_vld,
        p_0_0_0_0_0_2722_i_out_i,
        p_0_0_0_0_0_2722_i_out_o,
        p_0_0_0_0_0_2722_i_out_o_ap_vld,
        p_0_0_0_0_0492_2718_i_out_i,
        p_0_0_0_0_0492_2718_i_out_o,
        p_0_0_0_0_0492_2718_i_out_o_ap_vld,
        inpix_0_5_0_0_0_load703_i_out_i,
        inpix_0_5_0_0_0_load703_i_out_o,
        inpix_0_5_0_0_0_load703_i_out_o_ap_vld,
        inpix_0_4_0_0_0_load701_i_out_i,
        inpix_0_4_0_0_0_load701_i_out_o,
        inpix_0_4_0_0_0_load701_i_out_o_ap_vld,
        inpix_0_3_0_0_0_load699_i_out_i,
        inpix_0_3_0_0_0_load699_i_out_o,
        inpix_0_3_0_0_0_load699_i_out_o_ap_vld,
        inpix_0_2_0_0_0_load697_i_out_i,
        inpix_0_2_0_0_0_load697_i_out_o,
        inpix_0_2_0_0_0_load697_i_out_o_ap_vld,
        inpix_0_1_0_0_0_load695_i_out_i,
        inpix_0_1_0_0_0_load695_i_out_o,
        inpix_0_1_0_0_0_load695_i_out_o_ap_vld,
        inpix_0_0_0_0_0_load693_i_out_i,
        inpix_0_0_0_0_0_load693_i_out_o,
        inpix_0_0_0_0_0_load693_i_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] stream_in_vresampled_dout;
input  [4:0] stream_in_vresampled_num_data_valid;
input  [4:0] stream_in_vresampled_fifo_cap;
input   stream_in_vresampled_empty_n;
output   stream_in_vresampled_read;
output  [47:0] stream_in_hresampled_din;
input  [4:0] stream_in_hresampled_num_data_valid;
input  [4:0] stream_in_hresampled_fifo_cap;
input   stream_in_hresampled_full_n;
output   stream_in_hresampled_write;
input  [7:0] pixbuf_y_5;
input  [7:0] pixbuf_y_4;
input  [7:0] pixbuf_y_3;
input  [7:0] pixbuf_y_2;
input  [7:0] mpix_cr;
input  [7:0] mpix_cb;
input  [7:0] p_0_0_0_0_0_1_3740_lcssa800_i;
input  [7:0] p_0_0_0_0_0492_1_3736_lcssa797_i;
input  [7:0] p_0_3_0_0_0708_lcssa771_i;
input  [7:0] p_0_0_0_0_0500706_lcssa768_i;
input  [11:0] loopWidth;
input  [0:0] p_read;
input  [0:0] select_ln765;
input  [10:0] zext_ln765;
output  [7:0] pixbuf_y_11_out;
output   pixbuf_y_11_out_ap_vld;
output  [7:0] pixbuf_y_10_out;
output   pixbuf_y_10_out_ap_vld;
output  [7:0] pixbuf_y_9_out;
output   pixbuf_y_9_out_ap_vld;
output  [7:0] pixbuf_y_8_out;
output   pixbuf_y_8_out_ap_vld;
input  [7:0] pixbuf_y_7_out_i;
output  [7:0] pixbuf_y_7_out_o;
output   pixbuf_y_7_out_o_ap_vld;
input  [7:0] pixbuf_y_6_out_i;
output  [7:0] pixbuf_y_6_out_o;
output   pixbuf_y_6_out_o_ap_vld;
output  [7:0] mpix_cr_1_out;
output   mpix_cr_1_out_ap_vld;
output  [7:0] mpix_cb_1_out;
output   mpix_cb_1_out_ap_vld;
input  [7:0] p_0_0_0_0_0_3730_i_out_i;
output  [7:0] p_0_0_0_0_0_3730_i_out_o;
output   p_0_0_0_0_0_3730_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0492_3726_i_out_i;
output  [7:0] p_0_0_0_0_0492_3726_i_out_o;
output   p_0_0_0_0_0492_3726_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0_2722_i_out_i;
output  [7:0] p_0_0_0_0_0_2722_i_out_o;
output   p_0_0_0_0_0_2722_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0492_2718_i_out_i;
output  [7:0] p_0_0_0_0_0492_2718_i_out_o;
output   p_0_0_0_0_0492_2718_i_out_o_ap_vld;
input  [7:0] inpix_0_5_0_0_0_load703_i_out_i;
output  [7:0] inpix_0_5_0_0_0_load703_i_out_o;
output   inpix_0_5_0_0_0_load703_i_out_o_ap_vld;
input  [7:0] inpix_0_4_0_0_0_load701_i_out_i;
output  [7:0] inpix_0_4_0_0_0_load701_i_out_o;
output   inpix_0_4_0_0_0_load701_i_out_o_ap_vld;
input  [7:0] inpix_0_3_0_0_0_load699_i_out_i;
output  [7:0] inpix_0_3_0_0_0_load699_i_out_o;
output   inpix_0_3_0_0_0_load699_i_out_o_ap_vld;
input  [7:0] inpix_0_2_0_0_0_load697_i_out_i;
output  [7:0] inpix_0_2_0_0_0_load697_i_out_o;
output   inpix_0_2_0_0_0_load697_i_out_o_ap_vld;
input  [7:0] inpix_0_1_0_0_0_load695_i_out_i;
output  [7:0] inpix_0_1_0_0_0_load695_i_out_o;
output   inpix_0_1_0_0_0_load695_i_out_o_ap_vld;
input  [7:0] inpix_0_0_0_0_0_load693_i_out_i;
output  [7:0] inpix_0_0_0_0_0_load693_i_out_o;
output   inpix_0_0_0_0_0_load693_i_out_o_ap_vld;

reg ap_idle;
reg stream_in_vresampled_read;
reg[47:0] stream_in_hresampled_din;
reg stream_in_hresampled_write;
reg pixbuf_y_11_out_ap_vld;
reg pixbuf_y_10_out_ap_vld;
reg pixbuf_y_9_out_ap_vld;
reg pixbuf_y_8_out_ap_vld;
reg[7:0] pixbuf_y_7_out_o;
reg pixbuf_y_7_out_o_ap_vld;
reg[7:0] pixbuf_y_6_out_o;
reg pixbuf_y_6_out_o_ap_vld;
reg mpix_cr_1_out_ap_vld;
reg mpix_cb_1_out_ap_vld;
reg[7:0] p_0_0_0_0_0_3730_i_out_o;
reg p_0_0_0_0_0_3730_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0492_3726_i_out_o;
reg p_0_0_0_0_0492_3726_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0_2722_i_out_o;
reg p_0_0_0_0_0_2722_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0492_2718_i_out_o;
reg p_0_0_0_0_0492_2718_i_out_o_ap_vld;
reg[7:0] inpix_0_5_0_0_0_load703_i_out_o;
reg inpix_0_5_0_0_0_load703_i_out_o_ap_vld;
reg[7:0] inpix_0_4_0_0_0_load701_i_out_o;
reg inpix_0_4_0_0_0_load701_i_out_o_ap_vld;
reg[7:0] inpix_0_3_0_0_0_load699_i_out_o;
reg inpix_0_3_0_0_0_load699_i_out_o_ap_vld;
reg[7:0] inpix_0_2_0_0_0_load697_i_out_o;
reg inpix_0_2_0_0_0_load697_i_out_o_ap_vld;
reg[7:0] inpix_0_1_0_0_0_load695_i_out_o;
reg inpix_0_1_0_0_0_load695_i_out_o_ap_vld;
reg[7:0] inpix_0_0_0_0_0_load693_i_out_o;
reg inpix_0_0_0_0_0_load693_i_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln769_reg_927;
reg   [0:0] icmp_ln777_reg_931;
reg    ap_predicate_op63_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln769_reg_927_pp0_iter1_reg;
reg   [0:0] tmp_5_reg_945;
reg   [0:0] tmp_5_reg_945_pp0_iter1_reg;
reg    ap_predicate_op113_write_state3;
reg    ap_predicate_op122_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln769_fu_385_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_in_hresampled_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_in_vresampled_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln777_fu_407_p2;
wire   [0:0] cmp151_i_fu_413_p2;
reg   [0:0] cmp151_i_reg_935;
reg   [0:0] cmp151_i_reg_935_pp0_iter1_reg;
wire   [7:0] select_ln859_fu_584_p3;
wire   [7:0] select_ln859_1_fu_591_p3;
wire   [7:0] select_ln859_2_fu_598_p3;
wire   [7:0] select_ln859_3_fu_605_p3;
wire   [7:0] trunc_ln779_fu_432_p1;
reg   [7:0] p_0_0_0_0_0492_1_3735_i_fu_146;
wire    ap_loop_init;
reg   [7:0] p_0_0_0_0_0_1_3739_i_fu_150;
reg   [11:0] x_fu_154;
wire   [11:0] add_ln769_fu_391_p2;
reg   [11:0] ap_sig_allocacmp_x_5;
reg   [7:0] p_0_0_0_0_0500705_i_fu_158;
reg   [7:0] p_0_3_0_0_0707_i_fu_162;
reg   [7:0] mpix_cb_1_fu_166;
reg   [7:0] mpix_cr_1_fu_170;
reg   [7:0] pixbuf_y_fu_174;
reg   [7:0] pixbuf_y_8_fu_178;
reg   [7:0] pixbuf_y_9_fu_182;
reg   [7:0] pixbuf_y_10_fu_186;
wire   [47:0] p_s_fu_694_p7;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] p_0_fu_735_p7;
wire   [12:0] zext_ln769_fu_397_p1;
wire   [12:0] select_ln765_cast_cast_fu_319_p3;
wire   [11:0] zext_ln765_cast_fu_315_p1;
wire   [12:0] out_x_fu_401_p2;
wire   [7:0] select_ln859_5_fu_619_p3;
wire   [8:0] zext_ln908_1_fu_630_p1;
wire   [8:0] add_ln908_fu_634_p2;
wire   [8:0] zext_ln908_fu_626_p1;
wire   [7:0] select_ln859_4_fu_612_p3;
wire   [8:0] zext_ln910_1_fu_650_p1;
wire   [8:0] add_ln910_fu_654_p2;
wire   [8:0] zext_ln910_fu_646_p1;
wire   [8:0] add_ln910_1_fu_660_p2;
wire   [8:0] add_ln908_1_fu_640_p2;
wire   [7:0] lshr_ln1_fu_666_p4;
wire   [7:0] tmp_fu_684_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_554;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 p_0_0_0_0_0492_1_3735_i_fu_146 = 8'd0;
#0 p_0_0_0_0_0_1_3739_i_fu_150 = 8'd0;
#0 x_fu_154 = 12'd0;
#0 p_0_0_0_0_0500705_i_fu_158 = 8'd0;
#0 p_0_3_0_0_0707_i_fu_162 = 8'd0;
#0 mpix_cb_1_fu_166 = 8'd0;
#0 mpix_cr_1_fu_170 = 8'd0;
#0 pixbuf_y_fu_174 = 8'd0;
#0 pixbuf_y_8_fu_178 = 8'd0;
#0 pixbuf_y_9_fu_182 = 8'd0;
#0 pixbuf_y_10_fu_186 = 8'd0;
#0 ap_done_reg = 1'b0;
end

bd_2d50_csc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mpix_cb_1_fu_166 <= mpix_cb;
        end else if ((1'b1 == ap_condition_554)) begin
            mpix_cb_1_fu_166 <= {{stream_in_vresampled_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mpix_cr_1_fu_170 <= mpix_cr;
        end else if ((1'b1 == ap_condition_554)) begin
            mpix_cr_1_fu_170 <= {{stream_in_vresampled_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0_0_0492_1_3735_i_fu_146 <= p_0_0_0_0_0492_1_3736_lcssa797_i;
        end else if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_0_0_0_0_0492_1_3735_i_fu_146 <= mpix_cb_1_fu_166;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0_0_0500705_i_fu_158 <= p_0_0_0_0_0500706_lcssa768_i;
        end else if ((1'b1 == ap_condition_554)) begin
            p_0_0_0_0_0500705_i_fu_158 <= trunc_ln779_fu_432_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0_0_0_1_3739_i_fu_150 <= p_0_0_0_0_0_1_3740_lcssa800_i;
        end else if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_0_0_0_0_0_1_3739_i_fu_150 <= mpix_cr_1_fu_170;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_3_0_0_0707_i_fu_162 <= p_0_3_0_0_0708_lcssa771_i;
        end else if ((1'b1 == ap_condition_554)) begin
            p_0_3_0_0_0707_i_fu_162 <= {{stream_in_vresampled_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_10_fu_186 <= pixbuf_y_5;
        end else if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_10_fu_186 <= p_0_3_0_0_0707_i_fu_162;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_8_fu_178 <= pixbuf_y_3;
        end else if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_8_fu_178 <= pixbuf_y_10_fu_186;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_9_fu_182 <= pixbuf_y_4;
        end else if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_9_fu_182 <= p_0_0_0_0_0500705_i_fu_158;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_fu_174 <= pixbuf_y_2;
        end else if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_fu_174 <= pixbuf_y_9_fu_182;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln769_fu_385_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_154 <= add_ln769_fu_391_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_154 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        cmp151_i_reg_935 <= cmp151_i_fu_413_p2;
        cmp151_i_reg_935_pp0_iter1_reg <= cmp151_i_reg_935;
        icmp_ln769_reg_927 <= icmp_ln769_fu_385_p2;
        icmp_ln769_reg_927_pp0_iter1_reg <= icmp_ln769_reg_927;
        icmp_ln777_reg_931 <= icmp_ln777_fu_407_p2;
        tmp_5_reg_945 <= out_x_fu_401_p2[32'd12];
        tmp_5_reg_945_pp0_iter1_reg <= tmp_5_reg_945;
    end
end

always @ (*) begin
    if (((icmp_ln769_fu_385_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_5 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_5 = x_fu_154;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_0_0_0_0_load693_i_out_o = trunc_ln779_fu_432_p1;
    end else begin
        inpix_0_0_0_0_0_load693_i_out_o = inpix_0_0_0_0_0_load693_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_0_0_0_0_load693_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_0_0_0_0_load693_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_1_0_0_0_load695_i_out_o = {{stream_in_vresampled_dout[15:8]}};
    end else begin
        inpix_0_1_0_0_0_load695_i_out_o = inpix_0_1_0_0_0_load695_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_1_0_0_0_load695_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_1_0_0_0_load695_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_2_0_0_0_load697_i_out_o = {{stream_in_vresampled_dout[23:16]}};
    end else begin
        inpix_0_2_0_0_0_load697_i_out_o = inpix_0_2_0_0_0_load697_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_2_0_0_0_load697_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_2_0_0_0_load697_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_3_0_0_0_load699_i_out_o = {{stream_in_vresampled_dout[31:24]}};
    end else begin
        inpix_0_3_0_0_0_load699_i_out_o = inpix_0_3_0_0_0_load699_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_3_0_0_0_load699_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_3_0_0_0_load699_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_4_0_0_0_load701_i_out_o = {{stream_in_vresampled_dout[39:32]}};
    end else begin
        inpix_0_4_0_0_0_load701_i_out_o = inpix_0_4_0_0_0_load701_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_4_0_0_0_load701_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_4_0_0_0_load701_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_5_0_0_0_load703_i_out_o = {{stream_in_vresampled_dout[47:40]}};
    end else begin
        inpix_0_5_0_0_0_load703_i_out_o = inpix_0_5_0_0_0_load703_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_0_5_0_0_0_load703_i_out_o_ap_vld = 1'b1;
    end else begin
        inpix_0_5_0_0_0_load703_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mpix_cb_1_out_ap_vld = 1'b1;
    end else begin
        mpix_cb_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mpix_cr_1_out_ap_vld = 1'b1;
    end else begin
        mpix_cr_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0492_2718_i_out_o = select_ln859_3_fu_605_p3;
    end else begin
        p_0_0_0_0_0492_2718_i_out_o = p_0_0_0_0_0492_2718_i_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0492_2718_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0492_2718_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0492_3726_i_out_o = select_ln859_1_fu_591_p3;
    end else begin
        p_0_0_0_0_0492_3726_i_out_o = p_0_0_0_0_0492_3726_i_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0492_3726_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0492_3726_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0_2722_i_out_o = select_ln859_2_fu_598_p3;
    end else begin
        p_0_0_0_0_0_2722_i_out_o = p_0_0_0_0_0_2722_i_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0_2722_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0_2722_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0_3730_i_out_o = select_ln859_fu_584_p3;
    end else begin
        p_0_0_0_0_0_3730_i_out_o = p_0_0_0_0_0_3730_i_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0_0_0_3730_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0_3730_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_10_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_11_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_6_out_o = pixbuf_y_fu_174;
    end else begin
        pixbuf_y_6_out_o = pixbuf_y_6_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_6_out_o_ap_vld = 1'b1;
    end else begin
        pixbuf_y_6_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_7_out_o = pixbuf_y_8_fu_178;
    end else begin
        pixbuf_y_7_out_o = pixbuf_y_7_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_7_out_o_ap_vld = 1'b1;
    end else begin
        pixbuf_y_7_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_8_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln769_reg_927_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_9_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op122_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op113_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_in_hresampled_blk_n = stream_in_hresampled_full_n;
    end else begin
        stream_in_hresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op122_write_state3 == 1'b1)) begin
            stream_in_hresampled_din = p_0_fu_735_p7;
        end else if ((ap_predicate_op113_write_state3 == 1'b1)) begin
            stream_in_hresampled_din = p_s_fu_694_p7;
        end else begin
            stream_in_hresampled_din = 'bx;
        end
    end else begin
        stream_in_hresampled_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op122_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op113_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_in_hresampled_write = 1'b1;
    end else begin
        stream_in_hresampled_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op63_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_vresampled_blk_n = stream_in_vresampled_empty_n;
    end else begin
        stream_in_vresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op63_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_vresampled_read = 1'b1;
    end else begin
        stream_in_vresampled_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln769_fu_391_p2 = (ap_sig_allocacmp_x_5 + 12'd1);

assign add_ln908_1_fu_640_p2 = (add_ln908_fu_634_p2 + zext_ln908_fu_626_p1);

assign add_ln908_fu_634_p2 = (zext_ln908_1_fu_630_p1 + 9'd1);

assign add_ln910_1_fu_660_p2 = (add_ln910_fu_654_p2 + zext_ln910_fu_646_p1);

assign add_ln910_fu_654_p2 = (zext_ln910_1_fu_650_p1 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op63_read_state2 == 1'b1) & (stream_in_vresampled_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op122_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)) | ((ap_predicate_op113_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_554 = ((icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op113_write_state3 = ((p_read == 1'd0) & (tmp_5_reg_945_pp0_iter1_reg == 1'd0) & (icmp_ln769_reg_927_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op122_write_state3 = ((p_read == 1'd1) & (tmp_5_reg_945_pp0_iter1_reg == 1'd0) & (icmp_ln769_reg_927_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op63_read_state2 = ((icmp_ln777_reg_931 == 1'd1) & (icmp_ln769_reg_927 == 1'd1));
end

assign cmp151_i_fu_413_p2 = ((ap_sig_allocacmp_x_5 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln769_fu_385_p2 = ((ap_sig_allocacmp_x_5 < loopWidth) ? 1'b1 : 1'b0);

assign icmp_ln777_fu_407_p2 = ((zext_ln765_cast_fu_315_p1 > ap_sig_allocacmp_x_5) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_666_p4 = {{add_ln910_1_fu_660_p2[8:1]}};

assign mpix_cb_1_out = mpix_cb_1_fu_166;

assign mpix_cr_1_out = mpix_cr_1_fu_170;

assign out_x_fu_401_p2 = (zext_ln769_fu_397_p1 - select_ln765_cast_cast_fu_319_p3);

assign p_0_fu_735_p7 = {{{{{{inpix_0_5_0_0_0_load703_i_out_i}, {inpix_0_4_0_0_0_load701_i_out_i}}, {inpix_0_3_0_0_0_load699_i_out_i}}, {inpix_0_2_0_0_0_load697_i_out_i}}, {inpix_0_1_0_0_0_load695_i_out_i}}, {inpix_0_0_0_0_0_load693_i_out_i}};

assign p_s_fu_694_p7 = {{{{{{lshr_ln1_fu_666_p4}, {tmp_fu_684_p4}}, {pixbuf_y_7_out_i}}, {select_ln859_4_fu_612_p3}}, {select_ln859_5_fu_619_p3}}, {pixbuf_y_6_out_i}};

assign pixbuf_y_10_out = pixbuf_y_9_fu_182;

assign pixbuf_y_11_out = pixbuf_y_10_fu_186;

assign pixbuf_y_8_out = pixbuf_y_fu_174;

assign pixbuf_y_9_out = pixbuf_y_8_fu_178;

assign select_ln765_cast_cast_fu_319_p3 = ((select_ln765[0:0] == 1'b1) ? 13'd3 : 13'd0);

assign select_ln859_1_fu_591_p3 = ((cmp151_i_reg_935_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cb_1_fu_166 : p_0_0_0_0_0492_1_3735_i_fu_146);

assign select_ln859_2_fu_598_p3 = ((cmp151_i_reg_935_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cr_1_fu_170 : p_0_0_0_0_0_3730_i_out_i);

assign select_ln859_3_fu_605_p3 = ((cmp151_i_reg_935_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cb_1_fu_166 : p_0_0_0_0_0492_3726_i_out_i);

assign select_ln859_4_fu_612_p3 = ((cmp151_i_reg_935_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cr_1_fu_170 : p_0_0_0_0_0_2722_i_out_i);

assign select_ln859_5_fu_619_p3 = ((cmp151_i_reg_935_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cb_1_fu_166 : p_0_0_0_0_0492_2718_i_out_i);

assign select_ln859_fu_584_p3 = ((cmp151_i_reg_935_pp0_iter1_reg[0:0] == 1'b1) ? mpix_cr_1_fu_170 : p_0_0_0_0_0_1_3739_i_fu_150);

assign tmp_fu_684_p4 = {{add_ln908_1_fu_640_p2[8:1]}};

assign trunc_ln779_fu_432_p1 = stream_in_vresampled_dout[7:0];

assign zext_ln765_cast_fu_315_p1 = zext_ln765;

assign zext_ln769_fu_397_p1 = ap_sig_allocacmp_x_5;

assign zext_ln908_1_fu_630_p1 = select_ln859_5_fu_619_p3;

assign zext_ln908_fu_626_p1 = select_ln859_3_fu_605_p3;

assign zext_ln910_1_fu_650_p1 = select_ln859_4_fu_612_p3;

assign zext_ln910_fu_646_p1 = select_ln859_2_fu_598_p3;

endmodule //bd_2d50_csc_0_v_hcresampler_core_2_Pipeline_VITIS_LOOP_769_2
